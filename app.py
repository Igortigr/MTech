import streamlit as st
import pandas as pd
import numpy as np
import scipy.stats as sts
import matplotlib.pyplot as plt
import seaborn as sns

st.title('Data analysis')
data = st.file_uploader('Загрузите файл с данными')


def load_data(data):
    '''Функция приведения в нормальный вид данные'''

    df = pd.read_csv(data, encoding='Windows-1251')
    df[['Количество больничных дней', 'Возраст', 'Пол']] \
        = df['Количество больничных дней,"Возраст","Пол"'].str.split(',', expand=True)
    df.drop('Количество больничных дней,"Возраст","Пол"', axis=1, inplace=True)
    df['Количество больничных дней'] = df['Количество больничных дней'].astype(np.int32)
    df['Возраст'] = df['Возраст'].astype(np.int32)
    return df


def plot(arr1, arr2, hyp=1):
    '''Функция для визуализации данных'''

    name1 = 'Мужчины'
    name2 = 'Женщины'
    if hyp == 2:
        name1 = 'age >= 35'
        name2 = 'age < 35'
    fig = plt.figure(figsize=(20, 10))
    fig.add_subplot(2, 2, 1)
    sns.histplot(arr1)
    plt.title(name1)

    fig.add_subplot(2, 2, 2)
    plt.title(name2)
    sns.histplot(arr2)

    fig.add_subplot(2, 2, 3)
    plt.title('Объединенный график')
    sns.histplot(arr1)
    sns.histplot(arr2)
    st.pyplot(fig)


def f_test(x, y):
    '''Функция, рассчитывающая статистику F-теста и соответсвующее значение p_value'''

    f = np.var(x, ddof=1) / np.var(y, ddof=1)
    dfn = x.size - 1
    dfd = y.size - 1
    p = 1 - sts.f.cdf(f, dfn, dfd)
    return f, p


def testing_hypotheses_1(p_value):
    '''Функция, сравнивающая расчитанное значение p_value c уровнем значимости a=0.05
     и делающая вывод для гипотезы 1'''

    if p_value >= 0.05:
        st.write('**Вывод:** *Значение p >= 0.05, следовательно, статистически значимых различий между '
                 'двумя выборками не наблюдается. Это означает, что у нас нет достаточных доказательств для того, чтобы '
                 'утверждать, что мужчины пропускают в течение года более 2 рабочих дней (work_days) по '
                 'болезни значимо чаще женщин*')
    else:
        st.write(
            '**Вывод**: *Значение p < 0.05, следовательно, присутствуют статистически значимые различия между двумя'
            ' выборками. Это означает, что у нас есть достаточно доказательств для того, '
            'чтобы утверждать, что мужчины пропускают в течение года более 2 рабочих дней (work_days) по '
            'болезни значимо чаще женщин*')


def testing_hypotheses_2(p_value):
    '''Функция, сравнивающая расчитанное значение p_value c уровнем значимости a=0.05
         и делающая вывод для гипотезы 2'''

    if p_value >= 0.05:
        st.write('**Вывод:** *Значение p >= 0.05, следовательно, статистически значимых различий между '
                 'двумя выборками не наблюдается. Это означает, что у нас нет достаточных доказательств для того, чтобы '
                 'утверждать, что работники старше 35 лет (age) пропускают в течение года более 2 рабочих дней '
                 '(work_days) по болезни значимо чаще своих более молодых коллег*')
    else:
        st.write(
            '**Вывод**: *Значение p < 0.05, следовательно, присутствуют статистически значимые различия между двумя'
            ' выборками. Это означает, что у нас есть достаточно доказательств для того, '
            'чтобы утверждать, что работники старше 35 лет пропускают в течение года более 2 рабочих '
            'дней по болезни значимо чаще своих более молодых коллег*')


if data is not None:
    df = load_data(data)
    st.dataframe(df.head())

hypotheses = st.sidebar.radio('Выберите гипотезу', ['Гипотеза 1', 'Гипотеза 2'])
if hypotheses == 'Гипотеза 1' and data is not None:
    work_days = st.number_input('work_days', value=2, min_value=0, max_value=6)
    df[f'Количество больничных дней от {work_days} дней'] = (df['Количество больничных дней'] > work_days).map(int)
    hyp_1_M = df.loc[
        (df['Пол'] == '"М"'), f'Количество больничных дней от {work_days} дней']
    hyp_1_F = df.loc[
        (df['Пол'] == '"Ж"'), f'Количество больничных дней от {work_days} дней']
    plot(hyp_1_M, hyp_1_F)

    f, p = f_test(hyp_1_M, hyp_1_F)
    st.write(f'Результаты F-теста: ***p={p}***')
    if p >= 0.05:
        st.write('По результатам *F-теста* мы получили значение *p_value* выше чем уровень значимости *a=0.05*.'
                 'Это означает, что у нас есть достаточно доказательств, чтобы сказать, что две дисперсии равны. '
                 'Следовательно, соблюдены все условия для применения статистического критерия Стьюдента')
        t, p_value = sts.ttest_ind(hyp_1_F, hyp_1_M)
        st.write(f'Результаты статистического критерия Стьюдента *t={t}, **p_value={p_value}***')
        testing_hypotheses_1(p_value)
    else:
        st.write('По результатам *F-теста* мы получили значение *p_value* ниже чем уровень значимости *a=0.05*. '
                 'Это означает, что у нас нет достаточных доказательств, чтобы сказать, что две дисперсии равны. '
                 'Следовательно, мы не можем примененить статистический критерий Стьюдента. В этот случае применим '
                 'непараметрический статистический критерий Манна-Уитни')

        # результаты статистического критерия Манна-Уитни
        U, p_value = sts.mannwhitneyu(hyp_1_F, hyp_1_M)
        st.write(f'Результаты статистического критерия Манна-Уитни *U={U}, **p_value={p_value}***')
        testing_hypotheses_1(p_value)

elif hypotheses == 'Гипотеза 2' and data is not None:
    age = st.number_input('age', min_value=0, value=35)
    work_days = st.number_input('work_days', value=2, min_value=0, max_value=6)
    df[f'Количество больничных дней от {work_days} дней'] = (df['Количество больничных дней'] > work_days).map(int)
    hyp_2_1 = df.loc[
        (df['Возраст'] >= age), f'Количество больничных дней от {work_days} дней']
    hyp_2_2 = df.loc[
        (df['Возраст'] < age), f'Количество больничных дней от {work_days} дней']
    plot(hyp_2_1, hyp_2_2)
    f, p = f_test(hyp_2_2, hyp_2_2)
    st.write(f'Результаты F-теста: ***p={p}***')
    if p >= 0.05:
        st.write('По результатам *F - теста* мы получили значение *p_value* выше чем уровень значимости *a=0.05*.'
                 'Это означает, что у нас есть достаточно доказательств, чтобы сказать, что две дисперсии равны. '
                 'Следовательно, соблюдены все условия для применения статистического критерия Стьюдента')
        t, p_value = sts.ttest_ind(hyp_2_1, hyp_2_2)
        st.write(f'Результаты статистического критерия Стьюдента *t={t}, **p_value={p_value}***')
        testing_hypotheses_2(p_value)
    else:
        st.write('По результатам *F-теста* мы получили значение *p_value* ниже чем уровень значимости *a=0.05*. '
                 'Это означает, что у нас нет достаточных доказательств, чтобы сказать, что две дисперсии равны. '
                 'Следовательно, мы не можем примененить статистический критерий Стьюдента. В этот случае применим '
                 'непараметрический статистический критерий Манна-Уитни')
        U, p_value = sts.mannwhitneyu(hyp_2_1, hyp_2_2)
        st.write(f'Результаты статистического критерия Манна-Уитни *U={U}, **p_value={p_value}***')
        testing_hypotheses_2(p_value)
